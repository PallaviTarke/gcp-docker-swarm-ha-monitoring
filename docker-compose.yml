version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    deploy:
      placement: {constraints: [node.role == manager)}
    depends_on: [node]

  node:
    build: ./nodeapp
    environment:
      - MONGO_URL=mongodb://mongo1:27017,mongo2:27017/mydb?replicaSet=rs0
      - REDIS_URL=redis://redis-master:6379
    deploy: {replicas: 2}

  mongo1:
    image: mongo:6
    hostname: mongo1
    command: ["--replSet","rs0"]
    volumes: ["mongo1_data:/data/db"]
    deploy: {placement: [node.hostname == swarm-mgr]}

  mongo2:
    image: mongo:6
    hostname: mongo2
    command: ["--replSet","rs0"]
    volumes: ["mongo2_data:/data/db"]
    deploy: {placement: [node.hostname == swarm-wkr]}

  redis-master:
    image: redis:7
    volumes: ["redis_master_data:/data"]
    deploy: {placement: [node.hostname == swarm-mgr]}

  redis-slave:
    image: redis:7
    depends_on: [redis-master]
    command: ["redis-server","--replicaof","redis-master","6379"]
    volumes: ["redis_slave_data:/data"]
    deploy: {placement: [node.hostname == swarm-wkr]}

  vault:
    image: vault:latest
    cap_add: ["IPC_LOCK"]
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports: ["8200:8200"]
    deploy: {placement: [node.role == manager]}

  backup:
    build: ./backup
    volumes: ["mongo1_data:/data/db","/backup:/backup"]
    deploy:
      restart_policy: {condition: none}
      placement: [node.hostname == swarm-wkr]

volumes:
  mongo1_data:
  mongo2_data:
  redis_master_data:
  redis_slave_data:
