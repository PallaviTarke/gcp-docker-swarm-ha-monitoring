
version: '3.8'

services:

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    deploy:
      placement:
        constraints: [node.role == manager]
    depends_on:
      - node
    networks:
      - app-net

  node:
    image: pallavitarke04/nodeapp:latest
    environment:
      - MONGO_URL=mongodb://mongo1:27017,mongo2:27017/mydb?replicaSet=rs0
      - REDIS_URL=redis://redis-master:6379
    deploy:
      replicas: 2
    networks:
      - app-net

  mongo1:
    image: mongo:6
    hostname: mongo1
    command: ["--replSet", "rs0"]
    volumes:
      - mongo1_data:/data/db
    deploy:
      placement:
        constraints: [node.hostname == swarm-manager]
    networks:
      - app-net

  mongo2:
    image: mongo:6
    hostname: mongo2
    command: ["mongod", "--bind_ip_all", "--replSet", "rs0"]
    volumes:
      - mongo2_data:/data/db
    deploy:
      placement:
        constraints: [node.hostname == swarm-worker]
    networks:
      - app-net

  redis-master:
    image: redis:7
    volumes:
      - redis_master_data:/data
    deploy:
      placement:
        constraints: [node.hostname == swarm-manager]
    networks:
      - app-net

  redis-slave:
    image: redis:7
    depends_on:
      - redis-master
    command: ["redis-server", "--replicaof", "redis-master", "6379"]
    volumes:
      - redis_slave_data:/data
    deploy:
      placement:
        constraints: [node.hostname == swarm-worker]
    networks:
      - app-net

  vault:
    image: vault:1.15.4
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    ports:
      - "8200:8200"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - app-net

  backup:
    image: pallavitarke04/backup:latest
    volumes:
      - mongo1_data:/data/db
      - /backup:/backup
    deploy:
      restart_policy:
        condition: none
      placement:
        constraints: [node.hostname == swarm-manager]
    networks:
      - app-net

volumes:
  mongo1_data:
  mongo2_data:
  redis_master_data:
  redis_slave_data:
  backup_data:

networks:
  app-net:
    external: false
